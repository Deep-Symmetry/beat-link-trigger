name: Create überjar and native installers

on:
  push:
    branches:
      - master

jobs:
  build_uberjar:
    name: Build cross-platform überjar
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    steps:
    - uses: actions/checkout@v1

    - uses: actions/setup-java@v1
      with:
        java-version: '11'

    - name: Determine release tag and snapshot status
      run: |
        RELEASE_TAG=$(git describe --abbrev=0)
        echo "::set-env name=release_tag::$RELEASE_TAG"
        if [[ $RELEASE_TAG =~ .*-SNAPSHOT ]]
        then
          echo "::set-env name=release_snapshot::true"
        else
          echo "::set-env name=release_snapshot::false"
        fi

    - name: Cache Leiningen dependencies
      uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-lein-${{ hashFiles('**/project.clj') }}
        restore-keys: |
          ${{ runner.os }}-lein-

    - name: Install dependencies
      run: lein deps

    - name: Install antora
      run: sudo npm i -g @antora/cli @antora/site-generator-default

    - name: Build überjar
      run: lein uberjar

    - name: Delete pre-existing preview release
      if: success() && env.release_snapshot
      continue-on-error: true
      uses: Xotl/cool-github-releases@v1
      with:
        mode: delete
        tag_name: ${{ env.release_tag }}
        github_token: ${{ github.token }}

    - name: Upload überjar
      if: success()
      uses: Xotl/cool-github-releases@v1
      with:
        mode: update
        tag_name: ${{ env.release_tag }}
        isPrerelease: true
        assets: target/beat-link-trigger.jar
        github_token: ${{ github.token }}
        body_mrkdwn: |
          :construction: This is pre-release code for people who want to help test [what is going into the next release](https://github.com/Deep-Symmetry/beat-link-trigger/blob/master/CHANGELOG.md).

          > Don’t download this if you aren’t comfortable testing code while it is under active development! Instead, look at the [latest release](https:///github.com/Deep-Symmetry/beat-link-trigger/releases/latest).

          Please note that since it’s a snapshot release, the assets below (you may need to click to expand them) will change frequently—whenever new code is pushed to the project—so you will want to _download the latest versions every time you work with them_. The Mac disk image is not signed, so you will have to configure your Mac to allow it to run, and use the Finder contextual menu to open it the first time you run it after downloading.


  build_msi:
    name: Build Windows native installer
    runs-on: windows-latest

    needs:
      build_uberjar

    steps:
    - uses: actions/checkout@v1

    - name: Determine release tag and MSI name
      run: |
        $releaseTag = $( git describe --abbrev=0 )
        echo "::set-env name=release_tag::$releaseTag"
        $versionTag = ($releaseTag).replace("-SNAPSHOT","").replace("v","")
        echo "::set-env name=version_tag::$versionTag"
        $msiName = "Beat Link Trigger-$versionTag.msi"
        echo "::set-env name=msi_name::$msiName"
        $artifactName = "Beat-Link-Trigger-$versionTag-Win64.msi"
        echo "::set-env name=artifact_name::$artifactName"

    - uses: actions/setup-java@v1
      with:
        java-version: '14-ea'

    - name: Download überjar
      uses: Xotl/cool-github-releases@v1
      with:
        mode: download
        tag_name: ${{ env.release_tag }}
        assets: beat-link-trigger.jar
        github_token: ${{ github.token }}

    - name: Cache bundled OpenJDK runtime
      uses: actions/cache@v1
      with:
        path: Runtime
        key: ${{ runner.os }}-bundled-jdk

    - name: Build Windows Installer
      run: .\.github\scripts\build_msi.ps1

    - name: Upload Windows MSI
      if: success()
      uses: Xotl/cool-github-releases@v1
      with:
        mode: update
        tag_name: ${{ env.release_tag }}
        assets: ${{ env.artifact_name }}
        github_token: ${{ github.token }}


  build_dmg:
    name: Build macOS Disk Image
    runs-on: macos-latest

    needs:
      build_uberjar

    steps:
    - uses: actions/checkout@v1

    - name: Determine release tag and disk image name
      run: |
        releaseTag=$(git describe --abbrev=0)
        echo "::set-env name=release_tag::$releaseTag"
        versionTag=${releaseTag%-SNAPSHOT}
        versionTag=${versionTag#v}
        echo "::set-env name=version_tag::$versionTag"
        dmgName="Beat Link Trigger-$versionTag.dmg"
        echo "::set-env name=dmg_name::$dmgName"
        artifactName="Beat-Link-Trigger-$versionTag-MacOS.dmg"
        echo "::set-env name=artifact_name::$artifactName"

    - uses: actions/setup-java@v1
      with:
        java-version: '14-ea'

    - name: Download überjar
      uses: Xotl/cool-github-releases@v1
      with:
        mode: download
        tag_name: ${{ env.release_tag }}
        assets: beat-link-trigger.jar
        github_token: ${{ github.token }}

    - name: Cache bundled OpenJDK runtime
      uses: actions/cache@v1
      with:
        path: Runtime
        key: ${{ runner.os }}-bundled-jdk

    - name: Build macOS disk image
      env:
        IDENTITY_PASSPHRASE: ${{ secrets.IDENTITY_PASSPHRASE }}
        IDENTITY_P12_B64: ${{ secrets.IDENTITY_P12_B64 }}
      run: zsh .github/scripts/build_pkg.zsh

    - name: Upload macOS disk image
      if: success()
      uses: Xotl/cool-github-releases@v1
      with:
        mode: update
        tag_name: ${{ env.release_tag }}
        assets: ${{ env.artifact_name }}
        github_token: ${{ github.token }}


  succeed_if_skipped:
    name: Skipping CI
    runs-on: ubuntu-latest
    if: "contains(github.event.head_commit.message, '[skip ci]')"

    steps:
    - name: Placate GitHub Actions
      run: echo "CI skipped but want action to succeed anyway."
